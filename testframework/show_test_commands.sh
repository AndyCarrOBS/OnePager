#!/bin/bash

# OnPager Test Framework - Test Execution Commands
# This script shows available test commands and options

echo ""
echo "üß™ OnPager Test Framework - Test Execution Commands"
echo "=================================================="
echo ""
echo "üöÄ Python Test Commands:"
echo "  pytest tests/unit/                    # Run unit tests only"
echo "  pytest tests/integration/             # Run integration tests only"
echo "  pytest tests/regression/              # Run regression tests only"
echo "  pytest tests/features/                # Run feature tests only"
echo "  pytest tests/                         # Run all pytest tests"
echo ""
echo "üéØ Specific Test Suites:"
echo "  pytest tests/features/test_admin_toggle_buttons.py                    # Admin toggle tests"
echo "  pytest tests/unit/test_core_functions.py                             # Core functions tests"
echo "  pytest tests/integration/test_user_workflows.py                      # User workflow tests"
echo "  pytest tests/regression/test_regression_scenarios.py                  # Regression tests"
echo ""
echo "ü§ñ Robot Framework Tests:"
echo "  robot tests/robot_tests.robot                                         # Main Robot tests"
echo "  robot tests/features/admin_toggle_robot.robot                         # Admin toggle Robot tests"
echo ""
echo "‚ö° Test Runner Script:"
echo "  python run_tests.py --unit            # Run unit tests via runner"
echo "  python run_tests.py --integration     # Run integration tests via runner"
echo "  python run_tests.py --regression      # Run regression tests via runner"
echo "  python run_tests.py --robot           # Run Robot Framework tests via runner"
echo "  python run_tests.py --all             # Run all tests via runner"
echo "  python run_tests.py --parallel        # Run tests with parallel execution"
echo ""
echo "üîç Test Discovery & Information:"
echo "  pytest tests/ --collect-only          # Show all available tests"
echo "  pytest tests/ -k "admin"              # Run tests matching pattern"
echo "  pytest tests/ -m "smoke"              # Run tests with specific marker"
echo "  python run_tests.py --list            # List available test files"
echo "  python run_tests.py --features        # Show feature tracking"
echo ""
echo "üìä Test Execution Options:"
echo "  pytest tests/ -v                      # Verbose output"
echo "  pytest tests/ -s                      # Show print statements"
echo "  pytest tests/ --tb=short              # Short traceback format"
echo "  pytest tests/ --tb=long               # Long traceback format"
echo "  pytest tests/ --tb=no                 # No traceback"
echo "  pytest tests/ -x                      # Stop on first failure"
echo "  pytest tests/ --maxfail=2             # Stop after 2 failures"
echo ""
echo "üé® Test Reporting:"
echo "  pytest tests/ --html=reports/test-report.html                        # Generate HTML report"
echo "  pytest tests/ --self-contained-html                                  # Self-contained HTML report"
echo "  pytest tests/ --cov=tests --cov-report=html                          # Generate coverage report"
echo "  pytest tests/ --junitxml=reports/junit.xml                           # Generate JUnit XML"
echo ""
echo "üîß Admin Toggle Specific Tests:"
echo "  pytest tests/features/ -m "admin_panel"                              # Admin panel tests only"
echo "  pytest tests/features/ -m "toggle_button"                            # Toggle button tests only"
echo "  pytest tests/features/ -m "database_persistence"                     # Database tests only"
echo "  pytest tests/features/ -m "visual_effect"                            # Visual effect tests only"
echo "  pytest tests/features/ -m "accessibility"                            # Accessibility tests only"
echo ""
echo "üí° Quick Examples:"
echo "  # Run admin toggle tests with HTML report"
echo "  pytest tests/features/test_admin_toggle_buttons.py --html=reports/admin-toggle-report.html"
echo ""
echo "  # Run all tests in parallel with coverage"
echo "  pytest tests/ -n auto --cov=tests --cov-report=html"
echo ""
echo "  # Run specific test class"
echo "  pytest tests/features/test_admin_toggle_buttons.py::TestAdminToggleButtons"
echo ""
echo "  # Run specific test method"
echo "  pytest tests/features/test_admin_toggle_buttons.py::TestAdminToggleButtons::test_toggle_switch_enable"
echo ""
echo "  # Run Robot Framework tests with custom output"
echo "  robot --outputdir reports --report robot-admin-report.html tests/features/admin_toggle_robot.robot"
echo ""
echo "üéØ Test Categories Available:"
echo "  ‚Ä¢ Unit Tests: tests/unit/"
echo "  ‚Ä¢ Integration Tests: tests/integration/"
echo "  ‚Ä¢ Regression Tests: tests/regression/"
echo "  ‚Ä¢ Feature Tests: tests/features/"
echo "  ‚Ä¢ Robot Framework: tests/robot_tests.robot"
echo "  ‚Ä¢ Admin Toggle: tests/features/admin_toggle_robot.robot"
echo ""
echo "üí° Tips:"
echo "  - Use -v for verbose output to see test names"
echo "  - Use -k to filter tests by name pattern"
echo "  - Use -m to filter tests by markers"
echo "  - Use --html for beautiful test reports"
echo "  - Use -n auto for parallel execution"
echo "  - Check reports/ directory for generated reports"
echo ""
echo "=================================================="
echo ""
